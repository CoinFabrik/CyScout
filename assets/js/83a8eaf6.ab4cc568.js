"use strict";(self.webpackChunkcodeql_research=self.webpackChunkcodeql_research||[]).push([[537],{6295:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var o=n(6070),t=n(1503);const l={},r="Control Flow Graph",c={id:"Classes/ControlFlowGraph",title:"Control Flow Graph",description:"In this module there is",source:"@site/docs/Classes/ControlFlowGraph.md",sourceDirName:"Classes",slug:"/Classes/ControlFlowGraph",permalink:"/CyScout/Classes/ControlFlowGraph",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Call",permalink:"/CyScout/Classes/Call"},next:{title:"Enclosing",permalink:"/CyScout/Classes/Enclosing"}},i={},d=[{value:"Class ControlFlowNode",id:"class-controlflownode",level:2},{value:"Methods",id:"methods",level:3},{value:"getASuccessor()",id:"getasuccessor",level:3},{value:"getAPredecessor()",id:"getapredecessor",level:3},{value:"getControlFlowScope()",id:"getcontrolflowscope",level:3},{value:"getEnclosingStmt()",id:"getenclosingstmt",level:3},{value:"isCondition()",id:"iscondition",level:3},{value:"getATrueSuccessor()",id:"getatruesuccessor",level:3},{value:"getAFalseSuccessor()",id:"getafalsesuccessor",level:3},{value:"getBasicBlock()",id:"getbasicblock",level:3},{value:"Abstract class AdditionalControlFlowEdge",id:"abstract-class-additionalcontrolflowedge",level:2},{value:"Predicate successors_extended",id:"predicate-successors_extended",level:2}];function a(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"control-flow-graph",children:"Control Flow Graph"})}),"\n",(0,o.jsx)(s.p,{children:"In this module there is"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#class-controlflownode",children:"Class ControlFlowNode"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#abstract-class-additionalcontrolflowedge",children:"Abstract class AdditionalControlFlowEdge"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#predicate-successors_extended",children:"Predicate successors_extended"})}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"class-controlflownode",children:"Class ControlFlowNode"}),"\n",(0,o.jsx)(s.h3,{id:"methods",children:"Methods"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#getasuccessor",children:"getASuccessor()"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#getapredecessor",children:"getAPredecessor()"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#getcontrolflowscope",children:"getControlFlowScope()"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#getenclosingstmt",children:"getEnclosingStmt()"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#iscondition",children:"isCondition()"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#getatruesuccessor",children:"getATrueSuccessor()"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#getafalsesuccessor",children:"getAFalseSuccessor()"})}),"\n",(0,o.jsx)(s.li,{children:(0,o.jsx)(s.a,{href:"#getbasicblock",children:"getBasicBlock()"})}),"\n"]}),"\n",(0,o.jsx)(s.h3,{id:"getasuccessor",children:"getASuccessor()"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"ControlFlowNode getASuccessor() { successors_adapted(this, result) }\n"})}),"\n",(0,o.jsx)(s.p,{children:"Gets a direct successor of this control-flow node, if any."}),"\n",(0,o.jsx)(s.h3,{id:"getapredecessor",children:"getAPredecessor()"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"ControlFlowNode getAPredecessor() { this = result.getASuccessor() }\n"})}),"\n",(0,o.jsx)(s.p,{children:"Gets a direct predecessor of this control-flow node, if any."}),"\n",(0,o.jsx)(s.h3,{id:"getcontrolflowscope",children:"getControlFlowScope()"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"Solidity::FunctionDefinition getControlFlowScope() {\n    none() // overridden in subclasses\n  }\n"})}),"\n",(0,o.jsx)(s.p,{children:"Gets the function containing this control-flow node."}),"\n",(0,o.jsx)(s.h3,{id:"getenclosingstmt",children:"getEnclosingStmt()"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"  Stmt getEnclosingStmt() {\n    none() // overridden in subclasses\n  }\n"})}),"\n",(0,o.jsx)(s.p,{children:"Gets the smallest statement containing this control-flow node."}),"\n",(0,o.jsx)(s.h3,{id:"iscondition",children:"isCondition()"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"predicate isCondition() {\n    exists(this.getATrueSuccessor()) or\n    exists(this.getAFalseSuccessor())\n  }\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Holds if this node is the top-level expression of a conditional statement, meaning that ",(0,o.jsx)(s.code,{children:"this.getATrueSuccessor()"})," or ",(0,o.jsx)(s.code,{children:"this.getAFalseSuccessor()"})," will have a result."]}),"\n",(0,o.jsx)(s.h3,{id:"getatruesuccessor",children:"getATrueSuccessor()"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"ControlFlowNode getATrueSuccessor() {\n    qlCfgTrueSuccessor(this, result) and\n    result = this.getASuccessor()\n  }\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Gets a node such that the control-flow edge ",(0,o.jsx)(s.code,{children:"(this, result)"})," may be taken when this expression is true."]}),"\n",(0,o.jsx)(s.h3,{id:"getafalsesuccessor",children:"getAFalseSuccessor()"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"ControlFlowNode getAFalseSuccessor() {\n    qlCfgFalseSuccessor(this, result) and\n    result = this.getASuccessor()\n  }\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Gets a node such that the control-flow edge ",(0,o.jsx)(s.code,{children:"(this, result)"})," may be when this expression is false."]}),"\n",(0,o.jsx)(s.h3,{id:"getbasicblock",children:"getBasicBlock()"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"BasicBlock getBasicBlock() { result.getANode() = this }\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Gets the ",(0,o.jsx)(s.code,{children:"BasicBlock"})," containing this control-flow node."]}),"\n",(0,o.jsx)(s.h2,{id:"abstract-class-additionalcontrolflowedge",children:"Abstract class AdditionalControlFlowEdge"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"getAnEdgeTarget()"}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"predicate-successors_extended",children:"Predicate successors_extended"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"predicate successors_extended(ControlFlowNodeBase source, ControlFlowNodeBase target) {\n  qlCfgSuccessor(source, target)\n  or\n  source.(AdditionalControlFlowEdge).getAnEdgeTarget() = target\n}\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Holds if there is a control-flow edge from ",(0,o.jsx)(s.code,{children:"source"})," to ",(0,o.jsx)(s.code,{children:"target"})," in either the extractor-generated control-flow graph or in a subclass of\n",(0,o.jsx)(s.code,{children:"AdditionalControlFlowEdge"}),". Use this relation instead of ",(0,o.jsx)(s.code,{children:"qlCFGSuccessor"}),"."]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1503:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var o=n(758);const t={},l=o.createContext(t);function r(e){const s=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(l.Provider,{value:s},e.children)}}}]);