"use strict";(self.webpackChunkcodeql_research=self.webpackChunkcodeql_research||[]).push([[487],{4016:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>x,frontMatter:()=>c,metadata:()=>n,toc:()=>t});var l=a(6070),i=a(1503);const c={},r="Variable",n={id:"Classes/Variable",title:"Variable",description:"Classes",source:"@site/docs/Classes/Variable.md",sourceDirName:"Classes",slug:"/Classes/Variable",permalink:"/docs/Classes/Variable",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Classes/Variable.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SubBasicBlock",permalink:"/docs/Classes/SubBasicBlock"},next:{title:"Index",permalink:"/docs/Classes/classesIndex"}},d={},t=[{value:"Classes",id:"classes",level:2},{value:"Variable",id:"variable-1",level:2},{value:"getName()",id:"getname",level:3},{value:"hasName()",id:"hasname",level:3},{value:"toString()",id:"tostring",level:3},{value:"getLocation()",id:"getlocation",level:3},{value:"getDeclaringScope()",id:"getdeclaringscope",level:3},{value:"getAnAccess()",id:"getanaccess",level:3},{value:"LocalVariable",id:"localvariable",level:2},{value:"Methods",id:"methods",level:3},{value:"getAnAccess()",id:"getanaccess-1",level:3},{value:"getDefiningAccess()",id:"getdefiningaccess",level:3},{value:"isCaptured()",id:"iscaptured",level:3},{value:"GlobalVariable",id:"globalvariable",level:2},{value:"getAnAccess()",id:"getanaccess-2",level:3},{value:"InstanceVariable",id:"instancevariable",level:2},{value:"isClassInstanceVariable()",id:"isclassinstancevariable",level:3},{value:"getAnAccess()",id:"getanaccess-3",level:3},{value:"ClassVariable",id:"classvariable",level:2},{value:"getAnAccess()",id:"getanaccess-4",level:3},{value:"SelfVariable",id:"selfvariable",level:2},{value:"VariableAccess",id:"variableaccess",level:2},{value:"getVariable()",id:"getvariable",level:3},{value:"isExplicitWrite(AstNode assignment)",id:"isexplicitwriteastnode-assignment",level:3},{value:"isImplicitWrite()",id:"isimplicitwrite",level:3},{value:"VariableWriteAccess",id:"variablewriteaccess",level:2},{value:"VariableReadAccess",id:"variablereadaccess",level:2},{value:"LocalVariableAccess",id:"localvariableaccess",level:2},{value:"getAPrimaryQlClasses()",id:"getaprimaryqlclasses",level:3},{value:"isCapturedAccess()",id:"iscapturedaccess",level:3},{value:"LocalVariableWriteAccess",id:"localvariablewriteaccess",level:2},{value:"LocalVariableReadAccess",id:"localvariablereadaccess",level:2},{value:"GlobalVariableAccess",id:"globalvariableaccess",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass",level:3},{value:"GlobalVariableWriteAccess",id:"globalvariablewriteaccess",level:2},{value:"GlobalVariableReadAccess",id:"globalvariablereadaccess",level:2},{value:"InstanceVariableAccess",id:"instancevariableaccess",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-1",level:3},{value:"getReceiver()",id:"getreceiver",level:3},{value:"getAChild(string pred)",id:"getachildstring-pred",level:3},{value:"InstanceVariableWriteAccess",id:"instancevariablewriteaccess",level:2},{value:"InstanceVariableReadAccess",id:"instancevariablereadaccess",level:2},{value:"ClassVariableAccess",id:"classvariableaccess",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-2",level:3},{value:"ClassVariableWriteAccess",id:"classvariablewriteaccess",level:2},{value:"ClassVariableReadAccess",id:"classvariablereadaccess",level:2},{value:"SelfVariableAccess",id:"selfvariableaccess",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-3",level:3},{value:"SelfVariableReadAccess",id:"selfvariablereadaccess",level:2}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"variable",children:"Variable"})}),"\n",(0,l.jsx)(s.h2,{id:"classes",children:"Classes"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#variable-1",children:"Variable"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#localvariable",children:"LocalVariable"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#globalvariable",children:"GlobalVariable"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#instancevariable",children:"InstanceVariable"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#classvariable",children:"ClassVariable"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#selfvariable",children:"SelfVariable"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#variableaccess",children:"VariableAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#variablewriteaccess",children:"VariableWriteAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#variablereadaccess",children:"VariableReadAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#localvariableaccess",children:"LocalVariableAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#localvariablewriteaccess",children:"LocalVariableWriteAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#localvariablereadaccess",children:"LocalVariableReadAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#globalvariableaccess",children:"GlobalVariableAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#globalvariablewriteaccess",children:"GlobalVariableWriteAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#globalvariablewriteaccess",children:"GlobalVariableReadAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#instancevariableaccess",children:"InstanceVariableAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#instancevariablewriteaccess",children:"InstanceVariableWriteAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#instancevariablereadaccess",children:"InstanceVariableReadAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#classvariableaccess",children:"ClassVariableAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#classvariablewriteaccess",children:"ClassVariableWriteAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#classvariablereadaccess",children:"ClassVariableReadAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#selfvariableaccess",children:"SelfVariableAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#selfvariablereadaccess",children:"SelfVariableReadAccess"})}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"variable-1",children:"Variable"}),"\n",(0,l.jsx)(s.p,{children:"A variable declared in a scope."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getname",children:"getName()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#hasname",children:"hasName()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#tostring",children:"toString()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getlocation",children:"getLocation()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getdeclaringscope",children:"getDeclaringScope()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getanaccess",children:"getAnAccess()"})}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"getname",children:"getName()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final string getName() { result = super.getNameImpl() }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Gets the name of this variable."}),"\n",(0,l.jsx)(s.h3,{id:"hasname",children:"hasName()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final predicate hasName(string name) { this.getName() = name }\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Holds if the name of this variable is a ",(0,l.jsx)(s.code,{children:"name"}),"."]}),"\n",(0,l.jsx)(s.h3,{id:"tostring",children:"toString()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final string toString() { result = this.getName() }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Gets a textual representation of this variable."}),"\n",(0,l.jsx)(s.h3,{id:"getlocation",children:"getLocation()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final Location getLocation() { result = super.getLocationImpl() }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Gets the location of this variable."}),"\n",(0,l.jsx)(s.h3,{id:"getdeclaringscope",children:"getDeclaringScope()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final Scope getDeclaringScope() {\n    toGenerated(result) = this.(VariableReal).getDeclaringScopeImpl()\n  }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Gets the scope this variable is declared in."}),"\n",(0,l.jsx)(s.h3,{id:"getanaccess",children:"getAnAccess()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"VariableAccess getAnAccess() { result.getVariable() = this }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Gets an access to this variable."}),"\n",(0,l.jsx)(s.h2,{id:"localvariable",children:"LocalVariable"}),"\n",(0,l.jsxs)(s.p,{children:["A local variable. Extends ",(0,l.jsx)(s.code,{children:"Variable"}),"."]}),"\n",(0,l.jsx)(s.h3,{id:"methods",children:"Methods"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getanaccess-1",children:"getAnAccess"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getdefiningaccess",children:"getDefiningAccess()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#iscaptured",children:"isCaptured"})}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"getanaccess-1",children:"getAnAccess()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"override LocalVariableAccess getAnAccess() { result.getVariable() = this }\n"})}),"\n",(0,l.jsx)(s.h3,{id:"getdefiningaccess",children:"getDefiningAccess()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"VariableAccess getDefiningAccess() {\n    result = this.(LocalVariableReal).getDefiningAccessImpl() or\n    synthChild(any(NamedParameter p | this = p.getVariable()), 0, result)\n  }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Gets the access where this local variable is first introduced."}),"\n",(0,l.jsx)(s.h3,{id:"iscaptured",children:"isCaptured()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final predicate isCaptured() { this.getAnAccess().isCapturedAccess() }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Holds if this variable is captured. For example in"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-rb",children:"def m x\n  x.times do |y|\n    puts x\n  end\n  puts x\nend\n"})}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"x"})," is a captured variable, whereas ",(0,l.jsx)(s.code,{children:"y"})," is not."]}),"\n",(0,l.jsx)(s.h2,{id:"globalvariable",children:"GlobalVariable"}),"\n",(0,l.jsxs)(s.p,{children:["A global variable. Extends ",(0,l.jsx)(s.code,{children:"Variable"}),"."]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getanaccess-2",children:"getAnAccess()"})}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"getanaccess-2",children:"getAnAccess()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final override GlobalVariableAccess getAnAccess() { result.getVariable() = this }\n"})}),"\n",(0,l.jsx)(s.h2,{id:"instancevariable",children:"InstanceVariable"}),"\n",(0,l.jsx)(s.p,{children:"An instance variable."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#isclassinstancevariable",children:"isClassInstanceVariable()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getanaccess-3",children:"getAnAccess()"})}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"isclassinstancevariable",children:"isClassInstanceVariable()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final predicate isClassInstanceVariable() { super.isClassInstanceVariable() }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Holds if this variable is a class instance variable."}),"\n",(0,l.jsx)(s.h3,{id:"getanaccess-3",children:"getAnAccess()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final override InstanceVariableAccess getAnAccess() { result.getVariable() = this }\n"})}),"\n",(0,l.jsx)(s.h2,{id:"classvariable",children:"ClassVariable"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"getAnAccess()"}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"getanaccess-4",children:"getAnAccess()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final override ClassVariableAccess getAnAccess() { result.getVariable() = this }\n"})}),"\n",(0,l.jsx)(s.h2,{id:"selfvariable",children:"SelfVariable"}),"\n",(0,l.jsxs)(s.p,{children:["A ",(0,l.jsx)(s.code,{children:"self"})," variable. Extends LocalVariable."]}),"\n",(0,l.jsx)(s.p,{children:"No methods yet."}),"\n",(0,l.jsx)(s.h2,{id:"variableaccess",children:"VariableAccess"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getvariable",children:"getVariable()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#isexplicitwriteastnode-assignment",children:"isExplicitWrite(AstNode assignment)"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#isimplicitwrite",children:"isImplicitWrite()"})}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"getvariable",children:"getVariable()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final Variable getVariable() { result = super.getVariableImpl() }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Gets the variable this identifier refers to."}),"\n",(0,l.jsx)(s.h3,{id:"isexplicitwriteastnode-assignment",children:"isExplicitWrite(AstNode assignment)"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"predicate isExplicitWrite(AstNode assignment) {\n    explicitWriteAccess(toGenerated(this), toGenerated(assignment))\n    or\n    this = assignment.(AssignExpr).getLeftOperand()\n  }\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Holds if this access is a write access belonging to the explicit assignment ",(0,l.jsx)(s.code,{children:"assignment"}),". For example, in"]}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-rb",children:"a, b = foo\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Both ",(0,l.jsx)(s.code,{children:"a"})," and ",(0,l.jsx)(s.code,{children:"b"})," are write accesses belonging to the same assignment."]}),"\n",(0,l.jsx)(s.h3,{id:"isimplicitwrite",children:"isImplicitWrite()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"predicate isImplicitWrite() {\n    implicitWriteAccess(toGenerated(this))\n    or\n    this = any(SimpleParameterSynthImpl p).getDefiningAccess()\n    or\n    this = any(HashPattern p).getValue(_)\n    or\n    synthChild(any(NamedParameter p), 0, this)\n}\n"})}),"\n",(0,l.jsx)(s.p,{children:"Holds if this access is a write access belonging to an implicit assignment.\nFor example, in"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-rb",children:"def m elements\n  for e in elements do\n    puts e\n  end\nend\n"})}),"\n",(0,l.jsxs)(s.p,{children:["The access to ",(0,l.jsx)(s.code,{children:"elements"})," in the parameter list is an implicit assignment,\nas is the first access to ",(0,l.jsx)(s.code,{children:"e"}),"."]}),"\n",(0,l.jsx)(s.h2,{id:"variablewriteaccess",children:"VariableWriteAccess"}),"\n",(0,l.jsx)(s.p,{children:"An access to a variable where the value is updated."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"VariableWriteAccess() {\n    this.isExplicitWrite(_) or\n    this.isImplicitWrite()\n  }\n"})}),"\n",(0,l.jsx)(s.h2,{id:"variablereadaccess",children:"VariableReadAccess"}),"\n",(0,l.jsx)(s.p,{children:"An access to a variable where the value is read."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"VariableReadAccess() { not this instanceof VariableWriteAccess }\n"})}),"\n",(0,l.jsx)(s.h2,{id:"localvariableaccess",children:"LocalVariableAccess"}),"\n",(0,l.jsx)(s.p,{children:"An access to a local variable."}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getaprimaryqlclasses",children:"getAPrimaryQlClass()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#iscapturedaccess",children:"isCapturedAccess()"})}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"getaprimaryqlclasses",children:"getAPrimaryQlClasses()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:'override string getAPrimaryQlClass() { result = "LocalVariableAccess" }\n'})}),"\n",(0,l.jsx)(s.h3,{id:"iscapturedaccess",children:"isCapturedAccess()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final predicate isCapturedAccess() { isCapturedAccess(this) }\n"})}),"\n",(0,l.jsx)(s.p,{children:"Holds if this access is a captured variable access. For example in"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-rb",children:"def m x\n  x.times do |y|\n    puts x\n  end\n  puts x\nend\n"})}),"\n",(0,l.jsxs)(s.p,{children:["The access to ",(0,l.jsx)(s.code,{children:"x"})," in the first ",(0,l.jsx)(s.code,{children:"puts x"})," is a captured access, while the access to ",(0,l.jsx)(s.code,{children:"x"})," in the second ",(0,l.jsx)(s.code,{children:"puts x"})," is not."]}),"\n",(0,l.jsx)(s.h2,{id:"localvariablewriteaccess",children:"LocalVariableWriteAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."}),"\n",(0,l.jsx)(s.h2,{id:"localvariablereadaccess",children:"LocalVariableReadAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."}),"\n",(0,l.jsx)(s.h2,{id:"globalvariableaccess",children:"GlobalVariableAccess"}),"\n",(0,l.jsx)(s.h3,{id:"getaprimaryqlclass",children:"getAPrimaryQlClass()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:'final override string getAPrimaryQlClass() { result = "GlobalVariableAccess" }\n'})}),"\n",(0,l.jsx)(s.h2,{id:"globalvariablewriteaccess",children:"GlobalVariableWriteAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."}),"\n",(0,l.jsx)(s.h2,{id:"globalvariablereadaccess",children:"GlobalVariableReadAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."}),"\n",(0,l.jsx)(s.h2,{id:"instancevariableaccess",children:"InstanceVariableAccess"}),"\n",(0,l.jsxs)(s.p,{children:["An access to an instance variable. Extends ",(0,l.jsx)(s.code,{children:"VariableAccess"}),"."]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getaprimaryqlclass-1",children:"getAPrimaryQlClass()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getreceiver",children:"getReceiver()"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.a,{href:"#getachildstring-pred",children:"getAChild(string pred)"})}),"\n"]}),"\n",(0,l.jsx)(s.h3,{id:"getaprimaryqlclass-1",children:"getAPrimaryQlClass()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:'final override string getAPrimaryQlClass() { result = "InstanceVariableAccess" }\n'})}),"\n",(0,l.jsx)(s.h3,{id:"getreceiver",children:"getReceiver()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:"final SelfVariableAccess getReceiver() { synthChild(this, 0, result) }\n"})}),"\n",(0,l.jsxs)(s.p,{children:["Gets the synthetic receiver (",(0,l.jsx)(s.code,{children:"self"}),") of this instance variable access."]}),"\n",(0,l.jsx)(s.h3,{id:"getachildstring-pred",children:"getAChild(string pred)"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:'final override AstNode getAChild(string pred) {\n    result = VariableAccess.super.getAChild(pred)\n    or\n    pred = "getReceiver" and result = this.getReceiver()\n}\n'})}),"\n",(0,l.jsx)(s.h2,{id:"instancevariablewriteaccess",children:"InstanceVariableWriteAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."}),"\n",(0,l.jsx)(s.h2,{id:"instancevariablereadaccess",children:"InstanceVariableReadAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."}),"\n",(0,l.jsx)(s.h2,{id:"classvariableaccess",children:"ClassVariableAccess"}),"\n",(0,l.jsx)(s.p,{children:"An access to a class variable."}),"\n",(0,l.jsx)(s.h3,{id:"getaprimaryqlclass-2",children:"getAPrimaryQlClass()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:'final override string getAPrimaryQlClass() { result = "ClassVariableAccess" }\n'})}),"\n",(0,l.jsx)(s.p,{children:"Gets the name of the class."}),"\n",(0,l.jsx)(s.h2,{id:"classvariablewriteaccess",children:"ClassVariableWriteAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."}),"\n",(0,l.jsx)(s.h2,{id:"classvariablereadaccess",children:"ClassVariableReadAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."}),"\n",(0,l.jsx)(s.h2,{id:"selfvariableaccess",children:"SelfVariableAccess"}),"\n",(0,l.jsxs)(s.p,{children:["An access to the ",(0,l.jsx)(s.code,{children:"self"})," variable. For example:"]}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.code,{children:"self == other"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.code,{children:"self.method_name"})}),"\n",(0,l.jsx)(s.li,{children:(0,l.jsx)(s.code,{children:"def self.method_name ... end"})}),"\n"]}),"\n",(0,l.jsxs)(s.p,{children:["This also includes implicit references to the current object in method\ncalls.  For example, the method call ",(0,l.jsx)(s.code,{children:"foo(123)"})," has an implicit ",(0,l.jsx)(s.code,{children:"self"}),"\nreceiver, and is equivalent to the explicit ",(0,l.jsx)(s.code,{children:"self.foo(123)"}),"."]}),"\n",(0,l.jsx)(s.h3,{id:"getaprimaryqlclass-3",children:"getAPrimaryQlClass()"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{children:'final override string getAPrimaryQlClass() { result = "SelfVariableAccess" }\n'})}),"\n",(0,l.jsx)(s.p,{children:"Gets name of the class."}),"\n",(0,l.jsx)(s.h2,{id:"selfvariablereadaccess",children:"SelfVariableReadAccess"}),"\n",(0,l.jsx)(s.p,{children:"Not implemented yet."})]})}function x(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},1503:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>n});var l=a(758);const i={},c=l.createContext(i);function r(e){const s=l.useContext(c);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function n(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(c.Provider,{value:s},e.children)}}}]);