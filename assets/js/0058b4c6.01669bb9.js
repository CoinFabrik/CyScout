"use strict";(self.webpackChunkcodeql_research=self.webpackChunkcodeql_research||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Access","href":"/docs/Classes/Access","docId":"Classes/Access","unlisted":false},{"type":"link","label":"BasicBlock","href":"/docs/Classes/BasicBlock","docId":"Classes/BasicBlock","unlisted":false},{"type":"link","label":"Block Statement","href":"/docs/Classes/Block","docId":"Classes/Block","unlisted":false},{"type":"link","label":"Call","href":"/docs/Classes/Call","docId":"Classes/Call","unlisted":false},{"type":"link","label":"Control Flow Graph","href":"/docs/Classes/ControlFlowGraph","docId":"Classes/ControlFlowGraph","unlisted":false},{"type":"link","label":"Enclosing","href":"/docs/Classes/Enclosing","docId":"Classes/Enclosing","unlisted":false},{"type":"link","label":"Function","href":"/docs/Classes/Function","docId":"Classes/Function","unlisted":false},{"type":"link","label":"Specifier","href":"/docs/Classes/Specifier","docId":"Classes/Specifier","unlisted":false},{"type":"link","label":"SubBasicBlock","href":"/docs/Classes/SubBasicBlock","docId":"Classes/SubBasicBlock","unlisted":false},{"type":"link","label":"Variable","href":"/docs/Classes/Variable","docId":"Classes/Variable","unlisted":false},{"type":"link","label":"Index","href":"/docs/Classes/classesIndex","docId":"Classes/classesIndex","unlisted":false}]},{"type":"category","label":"Detectors Index","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Divide before multiply","href":"/docs/Detectors/divide-before-multiply","docId":"Detectors/divide-before-multiply","unlisted":false},{"type":"link","label":"Incorrect exponentiation","href":"/docs/Detectors/incorrect-exp","docId":"Detectors/incorrect-exp","unlisted":false},{"type":"link","label":"incorrect-shift","href":"/docs/Detectors/incorrect-shift","docId":"Detectors/incorrect-shift","unlisted":false},{"type":"link","label":"is-unreachable","href":"/docs/Detectors/is-unreachable","docId":"Detectors/is-unreachable","unlisted":false},{"type":"link","label":"msg-value-in-for-loop","href":"/docs/Detectors/msg-value-in-for-loop","docId":"Detectors/msg-value-in-for-loop","unlisted":false},{"type":"link","label":"transfer-from","href":"/docs/Detectors/transfer-from","docId":"Detectors/transfer-from","unlisted":false},{"type":"link","label":"Unchecked Send","href":"/docs/Detectors/unchecked-send","docId":"Detectors/unchecked-send","unlisted":false},{"type":"link","label":"Unrpotected self destruct","href":"/docs/Detectors/unprotected-self-destruct","docId":"Detectors/unprotected-self-destruct","unlisted":false}],"href":"/docs/Detectors/"},{"type":"category","label":"CyScout","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"det01_doc","href":"/docs/README/det01_doc","docId":"README/det01_doc","unlisted":false},{"type":"link","label":"det02_doc","href":"/docs/README/det02_doc","docId":"README/det02_doc","unlisted":false},{"type":"link","label":"det03_doc","href":"/docs/README/det03_doc","docId":"README/det03_doc","unlisted":false},{"type":"link","label":"det04_doc","href":"/docs/README/det04_doc","docId":"README/det04_doc","unlisted":false}],"href":"/docs/README/"}]},"docs":{"Classes/Access":{"id":"Classes/Access","title":"Access","description":"Classes","sidebar":"tutorialSidebar"},"Classes/BasicBlock":{"id":"Classes/BasicBlock","title":"BasicBlock","description":"Provides a library for reasoning about control flow at the granularity of basic blocks. This is usually much more efficient than reasoning directly at the level of ControlFlowNodes.","sidebar":"tutorialSidebar"},"Classes/Block":{"id":"Classes/Block","title":"Block Statement","description":"Implements a class to model a solidity block statement","sidebar":"tutorialSidebar"},"Classes/Call":{"id":"Classes/Call","title":"Call","description":"Classes","sidebar":"tutorialSidebar"},"Classes/classesIndex":{"id":"Classes/classesIndex","title":"Index","description":"- Access","sidebar":"tutorialSidebar"},"Classes/ControlFlowGraph":{"id":"Classes/ControlFlowGraph","title":"Control Flow Graph","description":"In this module there is","sidebar":"tutorialSidebar"},"Classes/Enclosing":{"id":"Classes/Enclosing","title":"Enclosing","description":"Provides predicates for finding the smallest element that encloses an expression or statement.","sidebar":"tutorialSidebar"},"Classes/Function":{"id":"Classes/Function","title":"Function","description":"Methods","sidebar":"tutorialSidebar"},"Classes/Specifier":{"id":"Classes/Specifier","title":"Specifier","description":"Provides classes for modeling specifiers and attributes.","sidebar":"tutorialSidebar"},"Classes/SubBasicBlock":{"id":"Classes/SubBasicBlock","title":"SubBasicBlock","description":"Provides the SubBasicBlock class, used for partitioning basic blocks in smaller pieces.","sidebar":"tutorialSidebar"},"Classes/Variable":{"id":"Classes/Variable","title":"Variable","description":"Classes","sidebar":"tutorialSidebar"},"Detectors/divide-before-multiply":{"id":"Detectors/divide-before-multiply","title":"Divide before multiply","description":"Description","sidebar":"tutorialSidebar"},"Detectors/incorrect-exp":{"id":"Detectors/incorrect-exp","title":"Incorrect exponentiation","description":"Description","sidebar":"tutorialSidebar"},"Detectors/incorrect-shift":{"id":"Detectors/incorrect-shift","title":"incorrect-shift","description":"Incorrect shift in assembly","sidebar":"tutorialSidebar"},"Detectors/index":{"id":"Detectors/index","title":"Detectors Index","description":"- deadCode","sidebar":"tutorialSidebar"},"Detectors/is-unreachable":{"id":"Detectors/is-unreachable","title":"is-unreachable","description":"Is unreachable","sidebar":"tutorialSidebar"},"Detectors/msg-value-in-for-loop":{"id":"Detectors/msg-value-in-for-loop","title":"msg-value-in-for-loop","description":"msg.value in for loops","sidebar":"tutorialSidebar"},"Detectors/transfer-from":{"id":"Detectors/transfer-from","title":"transfer-from","description":"transfer-from uses arbitrary from","sidebar":"tutorialSidebar"},"Detectors/unchecked-send":{"id":"Detectors/unchecked-send","title":"Unchecked Send","description":"Description","sidebar":"tutorialSidebar"},"Detectors/unprotected-self-destruct":{"id":"Detectors/unprotected-self-destruct","title":"Unrpotected self destruct","description":"Description","sidebar":"tutorialSidebar"},"README/det01_doc":{"id":"README/det01_doc","title":"det01_doc","description":"transferFrom uses arbitrary from","sidebar":"tutorialSidebar"},"README/det02_doc":{"id":"README/det02_doc","title":"det02_doc","description":"\'FIX\' word in comments","sidebar":"tutorialSidebar"},"README/det03_doc":{"id":"README/det03_doc","title":"det03_doc","description":"Incorrect shift in assembly","sidebar":"tutorialSidebar"},"README/det04_doc":{"id":"README/det04_doc","title":"det04_doc","description":"Dead code","sidebar":"tutorialSidebar"},"README/readme":{"id":"README/readme","title":"CyScout","description":"Run queries and detect vulnerabilities in your smart contracts using CodeQL-Solidity","sidebar":"tutorialSidebar"}}}}')}}]);