"use strict";(self.webpackChunkcodeql_research=self.webpackChunkcodeql_research||[]).push([[165],{428:(e,l,r)=>{r.r(l),r.d(l,{assets:()=>a,contentTitle:()=>i,default:()=>o,frontMatter:()=>t,metadata:()=>d,toc:()=>c});var n=r(6070),s=r(1503);const t={},i="Call",d={id:"Classes/Call",title:"Call",description:"Classes",source:"@site/docs/Classes/Call.md",sourceDirName:"Classes",slug:"/Classes/Call",permalink:"/CyScout/Classes/Call",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Block Statement",permalink:"/CyScout/Classes/Block"},next:{title:"Control Flow Graph",permalink:"/CyScout/Classes/ControlFlowGraph"}},a={},c=[{value:"Classes",id:"classes",level:2},{value:"Call",id:"call-1",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass",level:3},{value:"getArgument(int n)",id:"getargumentint-n",level:3},{value:"getAnArgument()",id:"getanargument",level:3},{value:"getKeywordArgument(string keyword)",id:"getkeywordargumentstring-keyword",level:3},{value:"getNumberOfArguments()",id:"getnumberofarguments",level:3},{value:"getATarget()",id:"getatarget",level:3},{value:"getAChild(string pred)",id:"getachildstring-pred",level:3},{value:"MethodCall",id:"methodcall",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-1",level:3},{value:"getReceiver()",id:"getreceiver",level:3},{value:"getMethodName()",id:"getmethodname",level:3},{value:"getBlock()",id:"getblock",level:3},{value:"getBlockArgument()",id:"getblockargument",level:3},{value:"hasBlock()",id:"hasblock",level:3},{value:"isSafeNavigation()",id:"issafenavigation",level:3},{value:"toString()",id:"tostring",level:3},{value:"getAChild(string pred)",id:"getachildstring-pred-1",level:3},{value:"UnknownMethodCall",id:"unknownmethodcall",level:2},{value:"UnknownMethodCall",id:"unknownmethodcall-1",level:3},{value:"SetterMethodCall",id:"settermethodcall",level:2},{value:"SetterMethodCall()",id:"settermethodcall-1",level:3},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-2",level:3},{value:"getTargetName()",id:"gettargetname",level:3},{value:"ElementReference",id:"elementreference",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-3",level:3},{value:"toString()",id:"tostring-1",level:3},{value:"YieldCall",id:"yieldcall",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-4",level:3},{value:"toString()",id:"tostring-2",level:3},{value:"SuperCall",id:"supercall",level:2},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-5",level:3},{value:"toString()",id:"tostring-3",level:3},{value:"BlockArgument",id:"blockargument",level:2},{value:"BlockArgument()",id:"blockargument-1",level:3},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-6",level:3},{value:"getValue()",id:"getvalue",level:3},{value:"toString()",id:"tostring-4",level:3},{value:"getAChild(string pred)",id:"getachildstring-pred-2",level:3},{value:"ForwardedArguments",id:"forwardedarguments",level:2},{value:"ForwardedArguments()",id:"forwardedarguments-1",level:3},{value:"getAPrimaryQlClass()",id:"getaprimaryqlclass-7",level:3},{value:"toString()",id:"tostring-5",level:3}];function h(e){const l={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.header,{children:(0,n.jsx)(l.h1,{id:"call",children:"Call"})}),"\n",(0,n.jsx)(l.h2,{id:"classes",children:"Classes"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#call",children:"Call"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#methodcall",children:"MethodCall"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#unknownmethodcall",children:"UnknownMethodCall"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#settermethodcall",children:"SetterMethodCall"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#elementreference",children:"ElementReference"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#yieldcall",children:"YieldCall"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#supercall",children:"SuperCall"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#blockargument",children:"BlockArgument"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#forwardedarguments",children:"ForwardedArguments"})}),"\n"]}),"\n",(0,n.jsx)(l.h2,{id:"call-1",children:"Call"}),"\n",(0,n.jsx)(l.p,{children:"Extends Expr instanceof CallImpl"}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getaprimaryqlclass",children:"getAPrimaryQlClass()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getargumentint-n",children:"getArgument(int n)"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getanargument",children:"getAnArgument()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getkeywordargumentstring-keyword",children:"getKeywordArgument(string keyword)"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getnumberofarguments",children:"getNumberOfArguments()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getatarget",children:"getATarget()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getachildstring-pred",children:"getAChild(string pred)"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"getaprimaryqlclass",children:"getAPrimaryQlClass()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'override string getAPrimaryQlClass() { result = "Call" }\n'})}),"\n",(0,n.jsx)(l.p,{children:"Returns the kind of the class."}),"\n",(0,n.jsx)(l.h3,{id:"getargumentint-n",children:"getArgument(int n)"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final Expr getArgument(int n) { result = super.getArgumentImpl(n) }\n"})}),"\n",(0,n.jsxs)(l.p,{children:["Gets the ",(0,n.jsx)(l.code,{children:"n"}),"th argument of this method call. For instance,"]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"foo(0, bar: 1)\nyield 0, bar: 1\n"})}),"\n",(0,n.jsxs)(l.p,{children:["For ",(0,n.jsx)(l.code,{children:"getArgument(0)"})," the result is the ",(0,n.jsx)(l.code,{children:"IntegerLiteral"})," 0. While for ",(0,n.jsx)(l.code,{children:"getArgument(1)"})," the result is a ",(0,n.jsx)(l.code,{children:"Pair"}),"."]}),"\n",(0,n.jsx)(l.h3,{id:"getanargument",children:"getAnArgument()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final Expr getAnArgument() { result = this.getArgument(_) }\n"})}),"\n",(0,n.jsx)(l.p,{children:"Gets an argument of this method call."}),"\n",(0,n.jsx)(l.h3,{id:"getkeywordargumentstring-keyword",children:"getKeywordArgument(string keyword)"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final Expr getKeywordArgument(string keyword) {\n    exists(Pair p |\n      p = this.getAnArgument() and\n      p.getKey().getConstantValue().isSymbol(keyword) and\n      result = p.getValue()\n    )\n  }\n"})}),"\n",(0,n.jsxs)(l.p,{children:["Gets the value of the keyword argument whose key is ",(0,n.jsx)(l.code,{children:"keyword"}),", if any."]}),"\n",(0,n.jsxs)(l.p,{children:["For example, the result for ",(0,n.jsx)(l.code,{children:'getKeywordArgument("qux")'})," in the following example is the ",(0,n.jsx)(l.code,{children:"IntegerLiteral"})," 123."]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:'foo :bar "baz", qux: 123\n'})}),"\n",(0,n.jsx)(l.h3,{id:"getnumberofarguments",children:"getNumberOfArguments()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final int getNumberOfArguments() { result = super.getNumberOfArgumentsImpl() }\n"})}),"\n",(0,n.jsx)(l.p,{children:"Gets the number of arguments of this method call."}),"\n",(0,n.jsx)(l.h3,{id:"getatarget",children:"getATarget()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final Callable getATarget() {\n    exists(DataFlowCall c |\n      this = c.asCall().getExpr() and\n      TCfgScope(result) = viableCallableLambda(c, _)\n    )\n    or\n    result = getTarget(TNormalCall(this.getAControlFlowNode()))\n  }\n"})}),"\n",(0,n.jsx)(l.p,{children:"Gets a potential target of this call, if any."}),"\n",(0,n.jsx)(l.h3,{id:"getachildstring-pred",children:"getAChild(string pred)"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'override AstNode getAChild(string pred) {\n    result = Expr.super.getAChild(pred)\n    or\n    pred = "getArgument" and result = this.getArgument(_)\n}\n\n'})}),"\n",(0,n.jsx)(l.p,{children:"Gets a child of the predicate passed by argument."}),"\n",(0,n.jsx)(l.h2,{id:"methodcall",children:"MethodCall"}),"\n",(0,n.jsx)(l.p,{children:"A method call."}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getaprimaryqlclass-1",children:"getAPrimaryQlClass()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getreceiver",children:"getReceiver()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getmethodname",children:"getMethodName()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getblock",children:"getBlock()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getblockargument",children:"getBlockArgument()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#hasblock",children:"hasBlock()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#issafenavigation",children:"isSafeNavigation()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#tostring",children:"toString()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getachildstring-pred-1",children:"getAChild(string pred)"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"getaprimaryqlclass-1",children:"getAPrimaryQlClass()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'override string getAPrimaryQlClass() { result = "MethodCall" }\n'})}),"\n",(0,n.jsx)(l.p,{children:"Returns the kind of the class."}),"\n",(0,n.jsx)(l.h3,{id:"getreceiver",children:"getReceiver()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final Expr getReceiver() { result = super.getReceiverImpl() }\n"})}),"\n",(0,n.jsx)(l.p,{children:"Gets the receiver of this call, if any. For example:"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"foo.bar\nBaz::qux\ncorge()\n"})}),"\n",(0,n.jsxs)(l.p,{children:["The result for the call to ",(0,n.jsx)(l.code,{children:"bar"})," is the ",(0,n.jsx)(l.code,{children:"Expr"})," for ",(0,n.jsx)(l.code,{children:"foo"}),"; the result for the call to ",(0,n.jsx)(l.code,{children:"qux"})," is the ",(0,n.jsx)(l.code,{children:"Expr"})," for ",(0,n.jsx)(l.code,{children:"Baz"}),"; for the call to ",(0,n.jsx)(l.code,{children:"corge"})," there is no result."]}),"\n",(0,n.jsx)(l.h3,{id:"getmethodname",children:"getMethodName()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final string getMethodName() { result = super.getMethodNameImpl() }\n"})}),"\n",(0,n.jsx)(l.p,{children:"Gets the name of the method being called. For example, in:"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"foo.bar x, y\n"})}),"\n",(0,n.jsxs)(l.p,{children:["The result is ",(0,n.jsx)(l.code,{children:'"bar"'}),". Super calls call a method with the same name as the current method, so the result for a super call is the name of the current method."]}),"\n",(0,n.jsx)(l.p,{children:"E.g:"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:'def foo\n super # the result for this super call is "foo"\nend\n'})}),"\n",(0,n.jsx)(l.h3,{id:"getblock",children:"getBlock()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final Block getBlock() { result = super.getBlockImpl() }\n"})}),"\n",(0,n.jsx)(l.p,{children:"Gets the block of this method call, if any."}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"foo.each { |x| puts x }\n"})}),"\n",(0,n.jsx)(l.h3,{id:"getblockargument",children:"getBlockArgument()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final BlockArgument getBlockArgument() { result = this.getAnArgument() }\n"})}),"\n",(0,n.jsx)(l.p,{children:"Gets the block argument of this method call, if any."}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"foo(&block)\n"})}),"\n",(0,n.jsx)(l.h3,{id:"hasblock",children:"hasBlock()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final predicate hasBlock() { exists(this.getBlock()) or exists(this.getBlockArgument()) }\n"})}),"\n",(0,n.jsx)(l.p,{children:"Holds if this method call has a block or block argument."}),"\n",(0,n.jsx)(l.h3,{id:"issafenavigation",children:"isSafeNavigation()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final predicate isSafeNavigation() { super.isSafeNavigationImpl() }\n"})}),"\n",(0,n.jsxs)(l.p,{children:["Holds if the safe navigation operator (",(0,n.jsx)(l.code,{children:"&."}),") is used in this call."]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"foo&.empty?\n"})}),"\n",(0,n.jsx)(l.h3,{id:"tostring",children:"toString()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'override string toString() { result = "call to " + this.getMethodName() }\n'})}),"\n",(0,n.jsx)(l.h3,{id:"getachildstring-pred-1",children:"getAChild(string pred)"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'override AstNode getAChild(string pred) {\n    result = Call.super.getAChild(pred)\n    or\n    pred = "getReceiver" and result = this.getReceiver()\n    or\n    pred = "getBlock" and result = this.getBlock()\n  }\n'})}),"\n",(0,n.jsx)(l.h2,{id:"unknownmethodcall",children:"UnknownMethodCall"}),"\n",(0,n.jsx)(l.p,{children:"Extends MethodCall"}),"\n",(0,n.jsxs)(l.p,{children:["A ",(0,n.jsx)(l.code,{children:"Method"})," call that has no known target. These will typically be calls to methods inherited from a superclass."]}),"\n",(0,n.jsxs)(l.p,{children:["Diclaimer: When API Graphs is able to resolve calls to methods like ",(0,n.jsx)(l.code,{children:"Kernel.send"})," this class is no longer necessary and should be removed."]}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#unknownmethodcall-1",children:"UnknownMethodCall"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"unknownmethodcall-1",children:"UnknownMethodCall"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"UnknownMethodCall() { not exists(this.(Call).getATarget()) }\n"})}),"\n",(0,n.jsx)(l.h2,{id:"settermethodcall",children:"SetterMethodCall"}),"\n",(0,n.jsxs)(l.p,{children:["A call to a setter method. This class extends ",(0,n.jsx)(l.code,{children:"MethodCall"})," and ",(0,n.jsx)(l.code,{children:"TMethodCallSynth"}),"."]}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#settermethodcall",children:"SetterMethodCall"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getaprimaryqlclass-2",children:"getAPrimaryQlClass"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#gettargetname",children:"getTargetName()"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"settermethodcall-1",children:"SetterMethodCall()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"SetterMethodCall() { this = TMethodCallSynth(_, _, _, true, _) }\n"})}),"\n",(0,n.jsx)(l.h3,{id:"getaprimaryqlclass-2",children:"getAPrimaryQlClass()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string getAPrimaryQlClass() { result = "SetterMethodCall" }\n'})}),"\n",(0,n.jsx)(l.h3,{id:"gettargetname",children:"getTargetName()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final string getTargetName() {\n    exists(string methodName |\n      methodName = this.getMethodName() and\n      result = methodName.prefix(methodName.length() - 1)\n    )\n  }\n"})}),"\n",(0,n.jsxs)(l.p,{children:["Gets the name of the method being called without the trailing ",(0,n.jsx)(l.code,{children:"="}),". For example, in the following two statements the target name is ",(0,n.jsx)(l.code,{children:"value"}),":"]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"foo.value=(1)\nfoo.value = 1\n"})}),"\n",(0,n.jsx)(l.h2,{id:"elementreference",children:"ElementReference"}),"\n",(0,n.jsxs)(l.p,{children:["An element reference; a call to the ",(0,n.jsx)(l.code,{children:"[]"})," method."]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"a[0]\n"})}),"\n",(0,n.jsxs)(l.p,{children:["Extends ",(0,n.jsx)(l.code,{children:"MethodCall"})]}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getaprimaryqlclass-3",children:"getAPrimaryQlClass()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#tostring-1",children:"toString()"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"getaprimaryqlclass-3",children:"getAPrimaryQlClass()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string getAPrimaryQlClass() { result = "ElementReference" }\n'})}),"\n",(0,n.jsx)(l.p,{children:"Returns the kind of the class."}),"\n",(0,n.jsx)(l.h3,{id:"tostring-1",children:"toString()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string toString() { result = "...[...]" }\n'})}),"\n",(0,n.jsx)(l.h2,{id:"yieldcall",children:"YieldCall"}),"\n",(0,n.jsxs)(l.p,{children:["A call to yield. Extends ",(0,n.jsx)(l.code,{children:"Call"})," class."]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"yield x, y\n"})}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getaprimaryqlclass-4",children:"getAPrimaryQlClass()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#tostring-2",children:"toString()"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"getaprimaryqlclass-4",children:"getAPrimaryQlClass()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string getAPrimaryQlClass() { result = "YieldCall" }\n'})}),"\n",(0,n.jsx)(l.h3,{id:"tostring-2",children:"toString()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string toString() { result = "yield ..." }\n'})}),"\n",(0,n.jsx)(l.h2,{id:"supercall",children:"SuperCall"}),"\n",(0,n.jsxs)(l.p,{children:["A call to ",(0,n.jsx)(l.code,{children:"super"}),"."]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"class Foo < Bar\n    def baz\n        super\n    end\nend\n"})}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getaprimaryqlclass-5",children:"getAPrimaryQlClass()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#tostring-3",children:"toString()"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"getaprimaryqlclass-5",children:"getAPrimaryQlClass()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string getAPrimaryQlClass() { result = "SuperCall" }\n'})}),"\n",(0,n.jsx)(l.h3,{id:"tostring-3",children:"toString()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'override string toString() { result = "super call to " + this.getMethodName() }\n'})}),"\n",(0,n.jsx)(l.h2,{id:"blockargument",children:"BlockArgument"}),"\n",(0,n.jsxs)(l.p,{children:["A block argument in a method call. It extends ",(0,n.jsx)(l.code,{children:"Expr"})]}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#blockargument-1",children:"BlockArgument()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getaprimaryqlclass-6",children:"getAPrimaryQlClass()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getvalue",children:"getValue()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#tostring-4",children:"toString()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getachildstring-pred-2",children:"getAChild()"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"blockargument-1",children:"BlockArgument()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"BlockArgument() { this = TBlockArgument(g) }\n"})}),"\n",(0,n.jsx)(l.h3,{id:"getaprimaryqlclass-6",children:"getAPrimaryQlClass()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string getAPrimaryQlClass() { result = "BlockArgument" }\n'})}),"\n",(0,n.jsx)(l.h3,{id:"getvalue",children:"getValue()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"final Expr getValue() {\n    toGenerated(result) = g.getChild() or\n    synthChild(this, 0, result)\n  }\n"})}),"\n",(0,n.jsxs)(l.p,{children:["Gets the underlying expression representing the block. In the following example, the result is the ",(0,n.jsx)(l.code,{children:"Expr"})," for ",(0,n.jsx)(l.code,{children:"bar"}),":"]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"foo(&bar)\n"})}),"\n",(0,n.jsx)(l.h3,{id:"tostring-4",children:"toString()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string toString() { result = "&..." }\n'})}),"\n",(0,n.jsx)(l.h3,{id:"getachildstring-pred-2",children:"getAChild(string pred)"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override AstNode getAChild(string pred) {\n    result = super.getAChild(pred)\n    or\n    pred = "getValue" and result = this.getValue()\n  }\n'})}),"\n",(0,n.jsx)(l.h2,{id:"forwardedarguments",children:"ForwardedArguments"}),"\n",(0,n.jsxs)(l.p,{children:["A ",(0,n.jsx)(l.code,{children:"..."})," expression that contains forwarded arguments. This class extends ",(0,n.jsx)(l.code,{children:"Expr"}),"."]}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{className:"language-rb",children:"foo(...)\n"})}),"\n",(0,n.jsxs)(l.ul,{children:["\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#forwardedarguments-1",children:"ForwardedArguments()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#getaprimaryqlclass-7",children:"getAPrimaryQlClass()"})}),"\n",(0,n.jsx)(l.li,{children:(0,n.jsx)(l.a,{href:"#tostring-5",children:"toString()"})}),"\n"]}),"\n",(0,n.jsx)(l.h3,{id:"forwardedarguments-1",children:"ForwardedArguments()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:"ForwardedArguments() { this = TForwardArgument(g) }\n"})}),"\n",(0,n.jsx)(l.h3,{id:"getaprimaryqlclass-7",children:"getAPrimaryQlClass()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string getAPrimaryQlClass() { result = "ForwardedArguments" }\n'})}),"\n",(0,n.jsx)(l.h3,{id:"tostring-5",children:"toString()"}),"\n",(0,n.jsx)(l.pre,{children:(0,n.jsx)(l.code,{children:'final override string toString() { result = "..." }\n'})}),"\n",(0,n.jsxs)(l.p,{children:["A ",(0,n.jsx)(l.code,{children:"..."})," expression that contains forwarded arguments."]})]})}function o(e={}){const{wrapper:l}={...(0,s.R)(),...e.components};return l?(0,n.jsx)(l,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1503:(e,l,r)=>{r.d(l,{R:()=>i,x:()=>d});var n=r(758);const s={},t=n.createContext(s);function i(e){const l=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function d(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(t.Provider,{value:l},e.children)}}}]);